name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel_build:
    name: Laravel Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Your existing steps here...

      - name: Build Node.JS
        run: |
          npm run build
          echo "::set-output name=build_status::success"

      # Additional step to print build status for troubleshooting
      - name: Print Build Status
        run: echo "Build Status: ${{ steps.build_nodejs.outputs.build_status }}"

  laravel_test:
    name: Laravel Test
    runs-on: ubuntu-latest
    needs: laravel_build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Your existing steps here...

      - name: Run tests
        run: |
          ./vendor/bin/phpunit
          echo "::set-output name=test_status::success"

      # Additional step to print test status for troubleshooting
      - name: Print Test Status
        run: echo "Test Status: ${{ steps.run_tests.outputs.test_status }}"

  notification:
    name: Notification
    runs-on: ubuntu-latest
    needs: [laravel_build, laravel_test]
    if: always() # Ensure this job runs even if previous jobs fail

    steps:
      - name: Check Laravel Build status
        if: ${{ needs.laravel_build.outputs.build_status == 'success' }}
        run: echo "Laravel Build job succeeded"

      - name: Check Laravel Test status
        if: ${{ needs.laravel_test.outputs.test_status == 'success' }}
        run: echo "Laravel Test job succeeded"

      - name: Check Laravel Build status
        if: ${{ needs.laravel_build.outputs.build_status == 'failure' }}
        run: echo "Laravel Build job failed"

      - name: Check Laravel Test status
        if: ${{ needs.laravel_test.outputs.test_status == 'failure' }}
        run: echo "Laravel Test job failed"
